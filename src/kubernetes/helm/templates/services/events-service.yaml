{{- if .Values.eventsService.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: events-service
  namespace: {{ .Values.global.namespace }}
  labels:
    app: events-service
    app.kubernetes.io/name: {{ include "cinemaabyss.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.eventsService.replicas }}
  selector:
    matchLabels:
      app: events-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: events-service
    spec:
      containers:
      - name: events-service
        image: "{{ .Values.eventsService.image.repository }}:{{ .Values.eventsService.image.tag }}"
        imagePullPolicy: {{ .Values.eventsService.image.pullPolicy }}
        ports:
          - containerPort: {{ .Values.eventsService.service.targetPort }}
        env:
          - name: PORT
            value: "{{ .Values.eventsService.service.targetPort }}"
          - name: KAFKA_BROKERS
            value: "kafka:9092"
        resources:
          {{- toYaml .Values.eventsService.resources | nindent 10 }}
        readinessProbe:
          httpGet:
            path: /api/events/health
            port: {{ .Values.eventsService.service.targetPort }}
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/events/health
            port: {{ .Values.eventsService.service.targetPort }}
          initialDelaySeconds: 20
          periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: events-service
  namespace: {{ .Values.global.namespace }}
  labels:
    app: events-service
    app.kubernetes.io/name: {{ include "cinemaabyss.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  type: {{ .Values.eventsService.service.type }}
  ports:
    - port: {{ .Values.eventsService.service.port }}
      targetPort: {{ .Values.eventsService.service.targetPort }}
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: events-service
    app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}